name: Release - Bump & Tag

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options: [patch, minor, major]

permissions:
  contents: write
  packages: write

jobs:
  bump_and_tag:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Bump version, commit, push, tag
        env:
          VERSION_TYPE: ${{ github.event.inputs.version_type }}
        run: |
          set -euo pipefail

          git config --local user.email "action@github.com"
          git config --local user.name  "GitHub Action"

          git fetch --tags --force

          # Ensure we're on a branch (in case of detached HEAD)
          CURRENT_BRANCH="$(git rev-parse --abbrev-ref HEAD || true)"
          if [ "$CURRENT_BRANCH" = "HEAD" ] || [ -z "$CURRENT_BRANCH" ]; then
            DEFAULT_BRANCH=$(git remote show origin | sed -n '/HEAD branch/s/.*: //p')
            git checkout "$DEFAULT_BRANCH"
            CURRENT_BRANCH="$DEFAULT_BRANCH"
          fi
          git pull --rebase origin "$CURRENT_BRANCH"

          START_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $START_VERSION"

          npm version "$VERSION_TYPE" --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "Bumped to: $NEW_VERSION"

          # Commit & push bump
          git add package.json package-lock.json 2>/dev/null || true
          if ! git diff --cached --quiet; then
            git commit -m "chore: bump version to $NEW_VERSION"
            git push origin "HEAD:$CURRENT_BRANCH"
          else
            echo "No changes to commit."
          fi

          # Create tag if missing
          TAG="v$NEW_VERSION"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists; not recreating."
          else
            git tag "$TAG"
            git push origin "$TAG"
          fi
